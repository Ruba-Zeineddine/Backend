import json
import hashlib
import boto3

region = 'eu-west-2'
dynamodb = boto3.resource('dynamodb', region_name=region)

def login(tablename, given_email, given_password):
    hash_object = hashlib.sha256()
    hash_object.update(given_password.encode())
    hash_password = hash_object.hexdigest()
    ddb = dynamodb.Table(tablename)
    res = ddb.get_item(
        Key={
            'email': given_email
        }
    )
    if 'Item' in res:
        if hash_password == res['Item']['password']:
            return {
                "statusCode": 200,
                "headers": {
                    "Content-Type": "application/json",
                    "Access-Control-Allow-Origin": "*",
                    "Access-Control-Allow-Headers": "Content-Type",
                    "Access-Control-Allow-Methods": "OPTIONS,POST,GET"
                },
                "body": json.dumps("login successful")
            }
        else:
            return {
                "statusCode": 401,
                "headers": {
                    "Content-Type": "application/json",
                    "Access-Control-Allow-Origin": "*",
                    "Access-Control-Allow-Headers": "Content-Type",
                    "Access-Control-Allow-Methods": "OPTIONS,POST,GET"
                },
                "body": json.dumps("incorrect password")
            }
    else:
        return {
            "statusCode": 404,
            "headers": {
                "Content-Type": "application/json",
                "Access-Control-Allow-Origin": "*",
                "Access-Control-Allow-Headers": "Content-Type",
                "Access-Control-Allow-Methods": "OPTIONS,POST,GET"
            },
            "body": json.dumps("email not found")
        }

def lambda_handler(event, context):
    print("Received event:", json.dumps(event))  # Log the event to inspect its structure
    
    if 'httpMethod' in event:
        if event['httpMethod'] == 'OPTIONS':
            return {
                "statusCode": 200,
                "headers": {
                    "Content-Type": "application/json",
                    "Access-Control-Allow-Origin": "*",
                    "Access-Control-Allow-Headers": "Content-Type",
                    "Access-Control-Allow-Methods": "OPTIONS,POST,GET"
                },
                "body": json.dumps("CORS preflight")
            }
    
    try:
        body = json.loads(event.get('body', '{}'))  # Default to an empty dict if 'body' is missing
        given_email = body['email']
        given_password = body['password']
        res = login('user-table', given_email, given_password)
        return res
    except Exception as e:
        print(f"Error processing request: {e}")
        return {
            "statusCode": 400,
            "headers": {
                "Content-Type": "application/json",
                "Access-Control-Allow-Origin": "*",
                "Access-Control-Allow-Headers": "Content-Type",
                "Access-Control-Allow-Methods": "OPTIONS,POST,GET"
            },
            "body": json.dumps({"error": str(e)})
        }
