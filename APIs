import json
import json
    
import boto3
import ast
import io
import csv
region = 'eu-west-2'
# Initialize dynamodb resource
dynamodb = boto3.resource('dynamodb', region_name=region)
    
    
def insert_dynamoDB_items(tablename: str):
    """
    Insert items to a dynamodb table.
    Arguments:
    - tablename: name of the dynamodb table where items will be inserted
    - items: list of elements that will be added to the dynamodb table
    """
    ddb = dynamodb.Table(tablename)
    ddb.put_item(
        Item={
        'DonorID': "51243715",
        'email': "ruba@idktest.com",
        'password': "I'mACoolSDE"
        }
    )
    
    body = json.dumps("SUCCEEDEDDDD")
    res = {
        "statusCode": 200,
        "headers": {
            "Content-Type": "application/json"
        },
        "body": body
    }
    
    return res
def read_dynamoDB_items(tablename: str, key: str):
    """
    Reads item from dynamodb table.
    Arguments:
    - tablename: name of the dynamodb table where items will be inserted
    - key: primary key of the item
    """
    ddb = dynamodb.Table(tablename)
    # FIGURE OUT HOW TO READ
    ress=ddb.get_item(
        Key={
            'DonorID':key
        }
    )
    if 'Item' in ress:
        item = ress['Item']
        return {
            "statusCode": 200,
            "headers": {
                "Content-Type": "application/json"
            },
            "body": json.dumps(item)
        }
    else:
        return {
            "statusCode": 404,
            "headers": {
                "Content-Type": "application/json"
            },
            "body": json.dumps("Item not found")
        }
def update_dynamoDB_items(tablename: str, key: str, email: str):
    ddb=dynamodb.Table(tablename)
    ress=ddb.update_item(
        Key={
            'DonorID': key
        },
        UpdateExpression="set email = :e",
        ExpressionAttributeValues={
            ':e': email
        },
        ReturnValues="UPDATED_NEW"
    )
def lambda_handler(event, context):
    res = read_dynamoDB_items('Donors','51243715')
    return res


#dynamodB table for fetching list of donations - API
{
    "donationId": "1",
    "donorName": "John Doe",
    "amount": 100,
    "date": "2024-07-21"
}


#code to fetch donations from DynamoDB:

import json
import boto3

dynamodb = boto3.resource('dynamodb')
table = dynamodb.Table('Donations')

def lambda_handler(event, context):
    # Scan the DynamoDB table
    response = table.scan()
    items = response['Items']
    
    return {
        'statusCode': 200,
        'body': json.dumps(items)
    }


















