import json
import boto3

region = 'eu-west-2'
dynamodb = boto3.resource('dynamodb', region_name=region)

def read_dynamoDB_items(tablename: str, key: str):
    """
    Reads item from dynamodb table.
    Arguments:
    - tablename: name of the dynamodb table where items will be read
    - key: primary key of the item
    """
    ddb = dynamodb.Table(tablename)
    res = ddb.get_item(
        Key={
            'email': key
        }
    )
    if 'Item' in res:
        item = res['Item']
        return {
            "statusCode": 200,
            "headers": {
                "Content-Type": "application/json",
                "Access-Control-Allow-Origin": "*",
                "Access-Control-Allow-Headers": "Content-Type",
                "Access-Control-Allow-Methods": "OPTIONS,POST,GET"
            },
            "body": json.dumps(item)
        }
    else:
        return {
            "statusCode": 404,
            "headers": {
                "Content-Type": "application/json",
                "Access-Control-Allow-Origin": "*",
                "Access-Control-Allow-Headers": "Content-Type",
                "Access-Control-Allow-Methods": "OPTIONS,POST,GET"
            },
            "body": json.dumps("Item not found")
        }

def lambda_handler(event, context):
    try:
        body = json.loads(event['body'])
        email = body['email']
        res = read_dynamoDB_items('user-table', email)
        return res
    except Exception as e:
        return {
            "statusCode": 400,
            "headers": {
                "Content-Type": "application/json",
                "Access-Control-Allow-Origin": "*",
                "Access-Control-Allow-Headers": "Content-Type",
                "Access-Control-Allow-Methods": "OPTIONS,POST,GET"
            },
            "body": json.dumps({"error": str(e)})
        }
